input {
  file {
    codec => json
    mode => read
    exit_after_read => true
    path => "/output/**/*_messages.json"
 }
}


filter {
  mutate {
    gsub => [ 'message','\n','']
  }

  if [message] =~ /^{.*}$/ {
    json { source => message }
  }

  mutate {
    rename => {
      "messages" => "msgs"
    }
  }

  ruby {
    code => '
        messages = event.get("[msgs]")
        new_messages = []
        messages.each { |msg|
            if msg["_"] == "Message"
                reply_to_id = msg["reply_to"].nil? ? nil : msg["reply_to"]["reply_to_msg_id"]
                new_message = {
                    "messageType" => msg["_"],
                    "id" => msg["id"],
                    "peer_id" => msg["peer_id"]["channel_id"],
                    "date" => msg["date"],
                    "message" => msg["message"],
                    "pinned" => msg["pinned"],
                    "from_id" => msg["from_id"]["user_id"],
                    "reply_to_id" => reply_to_id,
                    "edit_date" => msg["edit_date"]
                }
                new_messages << new_message
            end
        }
        event.set("[msgs]", new_messages)
    '
  }

  mutate {
      rename => {
          "[chats][0]" => "ch"
      }
      add_field => {
          "[channel][id]" => "%{[ch][id]}"
          "[channel][participants_count]" => "%{[ch][participants_count]}"
          "[channel][title]" => "%{[ch][title]}"
          "[channel][date]" => "%{[ch][date]}"
          "[channel][username]" => "%{[ch][username]}"
      }
  }

  ruby {
      code => '
          new_users = []
          users = event.get("[users]")
          users.each { |user|
              new_user = {
                  "id" => user["id"],
                  "bot" => user["bot"],
                  "verified" => user["verified"],
                  "premium" => user["premium"],
                  "first_name" => user["first_name"],
                  "last_name" => user["last_name"],
                  "username" => user["username"],
                  "phone" => user["phone"]
              }
              new_users << new_user
          }
          event.set("[users]", new_users)
      '
  }

  # prune { whitelist_names => [ "msgs", "channel", "users" ] }
}

output {
  file {
    codec => json
    path => "/output/telegram-tracker-logstash.json"
  }
}